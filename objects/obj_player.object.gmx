<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set variables
grav = 0.5;
spd = 5;
jspd = 7;
hspd = 0;
vspd = 0;
fric = .5;

image_speed = 0.17;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// platform stuff

var rkey = keyboard_check(vk_right);
var lkey = keyboard_check(vk_left);
var jkey = keyboard_check_pressed(vk_up);

//groundcheck
if (place_meeting(x, y+1, obj_solid))
{
    vspd = 0;
    
    
    //jump
    if (jkey)
    {
        vspd = -jspd;       
    }   
} 
else
{
    //gravity
    {
       vspd += grav;
    }   

    if ( vspd &gt;1)
        vspd = vspd*1.05;      
}
 

//move right

if (rkey) 
{
    if(hspd &lt; spd)
    {
        hspd += fric;
    }
        else
        {
        hspd = spd;
        }   
}

//wall jump to left
if (place_meeting(x-1, y, obj_solid) &amp;&amp; !place_meeting(x, y+1, obj_solid))
{         
    if(jkey)
    {
        vspd = -8; 
        hspd += 5;   
    }                      
}
//move left
if (lkey)
{
   if(hspd &gt; -spd)
    {
        hspd -= fric;
    }
        else
        {
        hspd = -spd;
        }          
}

//wall jump to right
if (place_meeting(x+1, y, obj_solid) &amp;&amp; !place_meeting(x, y+1, obj_solid))
{
    if(jkey)
    {
        vspd = -8;
        hspd -= 5;
            
    }
}         

//sliding down walls
if (place_meeting(x+1, y, obj_solid) &amp;&amp; !place_meeting(x, y+1, obj_solid) &amp;&amp; (rkey) &amp;&amp; (vspd &gt;= 0))
vspd = 3
if (place_meeting(x-1, y, obj_solid) &amp;&amp; !place_meeting(x, y+1, obj_solid) &amp;&amp; (lkey) &amp;&amp; (vspd &gt;= 0))
vspd = 3

     
         
//move check (if not pressing movement keys, or pressing both, no movement)
if ((!rkey &amp;&amp; !lkey) || (rkey &amp;&amp; lkey))
{
    if(hspd !=0)
    {
        if(hspd &lt;0)
        {
            hspd += fric;
        }
            else
            {
                hspd -= fric;
            }
    }
}

// Horizontal collisions (no clipping into walls)
if (place_meeting (x+hspd, y, obj_solid))
{
    while(!place_meeting(x+sign(hspd), y, obj_solid))
    {
        x+= sign(hspd);
    }
    hspd = 0;
}

// move horizontally
x += hspd;

// Vertical collisions (no clipping into walls)
if (place_meeting (x, y+vspd, obj_solid))
{
    while(!place_meeting(x, y+sign(vspd), obj_solid))
    {
        y+= sign(vspd);
    }
    vspd = 0;
}


//vertical movement
y += vspd;

//

    




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///camera
view_xview[0] += ((x-(view_wview[0]/2)) - view_xview[0]) * 0.13;
view_yview[0] += ((y-(view_wview[0]/3.4)) - view_yview[0]) * 0.13;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animations

if (hspd &gt; 0)
    {
    sprite_index = spr_playermove;
    image_xscale = 1;
    image_speed = 0.45;
    }
 
    
if (hspd &lt; 0)
    {
    sprite_index = spr_playermove;
    image_xscale = -1;
    image_speed = 0.45;
    }

if (hspd = 0)
    {
    sprite_index = spr_player;
    image_speed = 0.1;
    }
    
if (vspd &lt; 0)
    {
    sprite_index = spr_playerjump;
    }
    
if (vspd &gt;= 0 &amp;&amp; (!place_meeting(x, y+1, obj_solid)))
    {
    sprite_index = spr_playerfall;
    }
    
if (place_meeting(x+1, y, obj_solid) &amp;&amp; !place_meeting(x, y+1, obj_solid) &amp;&amp; (rkey) &amp;&amp; (vspd &gt;= 0))
    {
    sprite_index = spr_playerslide;
    }
    
if (place_meeting(x-1, y, obj_solid) &amp;&amp; !place_meeting(x, y+1, obj_solid) &amp;&amp; (lkey) &amp;&amp; (vspd &gt;= 0))
    {
    sprite_index = spr_playerslide;
    image_xscale = -1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_xscale = 1)
    {
     instance_create( x, y, obj_playerattack );     
    }

if (image_xscale = -1)
    {
     instance_create( x, y, obj_playerattackmirror );     
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
